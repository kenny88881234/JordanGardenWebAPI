// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JordanGardenWebAPI.Migrations
{
    [DbContext(typeof(JordanGardenDbContext))]
    [Migration("20220809160411_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)")
                        .HasColumnOrder(4);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(3);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("Create_Time")
                        .HasColumnOrder(3)
                        .HasDefaultValueSql("now()");

                    b.Property<decimal?>("OtherPrice")
                        .HasColumnType("numeric(7,3)")
                        .HasColumnName("Other_Price")
                        .HasColumnOrder(2);

                    b.Property<decimal?>("ShipPrice")
                        .HasColumnType("numeric(7,3)")
                        .HasColumnName("Ship_Price")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Uptimestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("Update_Time")
                        .HasColumnOrder(4)
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id")
                        .HasColumnOrder(1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_Id")
                        .HasColumnOrder(2);

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("Company_Id")
                        .HasColumnOrder(1);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(6,3)")
                        .HasColumnOrder(3);

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnOrder(5);

                    b.Property<string>("Size")
                        .HasColumnType("varchar(20)")
                        .HasColumnOrder(4);

                    b.Property<int>("TillandsiaId")
                        .HasColumnType("int")
                        .HasColumnName("Tillandsia_Id")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TillandsiaId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Tillandsia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("varchar(300)")
                        .HasColumnName("Image")
                        .HasColumnOrder(3);

                    b.Property<string>("NameChi")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Name_Chi")
                        .HasColumnOrder(2);

                    b.Property<string>("NameEng")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name_Eng")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("Tillandsias");
                });

            modelBuilder.Entity("OrderDetail", b =>
                {
                    b.HasOne("Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_OrderId");

                    b.HasOne("Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_CompanyId");

                    b.HasOne("Tillandsia", "Tillandsia")
                        .WithMany("Products")
                        .HasForeignKey("TillandsiaId")
                        .IsRequired()
                        .HasConstraintName("ForeignKey_TillandsiaId");

                    b.Navigation("Company");

                    b.Navigation("Tillandsia");
                });

            modelBuilder.Entity("Company", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Tillandsia", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
